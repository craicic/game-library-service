{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const CREATION = 'creation';\nexport const EDITION = 'edition';\nexport const NAV = 'navigation';\nexport let WrapperService = /*#__PURE__*/(() => {\n  class WrapperService {\n    // subscription: Subscription;\n    constructor(router, route) {\n      this.router = router;\n      this.route = route;\n      // put it where needed\n      this.MODE_NAMES = {};\n      this.MODE_NAMES[CREATION] = 'Création';\n      this.MODE_NAMES[EDITION] = 'Édition';\n      this.MODE_NAMES[NAV] = 'Navigation';\n      /* this method seems not secured */\n      // this.subscription = this.router.events\n      //   .pipe(filter(event => event instanceof NavigationStart))\n      //   .subscribe(() => {\n      //     if (!this.router.url.startsWith('/admin/locked-mode/')) {\n      //       this.mode = NAV;\n      //     }\n      //   });\n    }\n\n    ngOnDestroy() {\n      // this.subscription.unsubscribe();\n    }\n    getModeName() {\n      return this.MODE_NAMES[this.mode];\n    }\n  }\n  WrapperService.ɵfac = function WrapperService_Factory(t) {\n    return new (t || WrapperService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i1.ActivatedRoute));\n  };\n  WrapperService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WrapperService,\n    factory: WrapperService.ɵfac,\n    providedIn: 'root'\n  });\n  return WrapperService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}