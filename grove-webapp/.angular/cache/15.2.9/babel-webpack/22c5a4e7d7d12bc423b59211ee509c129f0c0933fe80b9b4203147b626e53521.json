{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../publisher.service\";\nimport * as i2 from \"../publisher-data.service\";\nimport * as i3 from \"../../../shared/services/country-data.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../shared/components/contact-form/contact-form.component\";\nfunction PublisherEditComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13)(1, \"span\");\n    i0.ɵɵtext(2, \"Cet \\u00E9diteur existe d\\u00E9j\\u00E0 en base de donn\\u00E9es\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PublisherEditComponent_app_contact_form_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-contact-form\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"contactForm\", ctx_r1.contactForm);\n  }\n}\nfunction PublisherEditComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function PublisherEditComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAddContactForm());\n    });\n    i0.ɵɵtext(1, \"Ajouter les coordonn\\u00E9es \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PublisherEditComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function PublisherEditComponent_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onRemoveContactForm());\n    });\n    i0.ɵɵtext(1, \"Retirer les coordonn\\u00E9es \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let PublisherEditComponent = /*#__PURE__*/(() => {\n  class PublisherEditComponent {\n    constructor(publishersService, publishersDataService, countryDataService, route, router) {\n      this.publishersService = publishersService;\n      this.publishersDataService = publishersDataService;\n      this.countryDataService = countryDataService;\n      this.route = route;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.hasContact = false;\n      this.subscription = this.route.params.subscribe(params => {\n        const id = 'id';\n        this.id = +params[id];\n        if (params[id]) {\n          this.editMode = true;\n        } else {\n          this.editMode = false;\n        }\n        this.initFrom();\n      });\n    }\n    onAddContactForm() {\n      this.hasContact = true;\n      this.publisherForm.addControl('contact', this.contactForm);\n    }\n    onRemoveContactForm() {\n      this.hasContact = false;\n      this.publisherForm.removeControl('contact');\n    }\n    onSubmit() {\n      const publisher = this.publisherForm.value;\n      if (this.editMode) {\n        const storedPublisher = this.publishersService.getPublisherById(this.id);\n        if (storedPublisher && storedPublisher.contact) {\n          publisher.contact.id = storedPublisher.contact.id;\n        }\n        this.publishersDataService.editPublisher(this.id, publisher);\n      } else {\n        this.publishersDataService.addPublisher(publisher, this.hasContact);\n      }\n      this.onCancel();\n    }\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n    initFrom() {\n      let name = '';\n      let postalCode = '';\n      let street = '';\n      let city = '';\n      let country = '';\n      let streetNumber = '';\n      let phoneNumber = '';\n      let website = '';\n      let mailAddress = '';\n      if (this.editMode) {\n        const publisher = this.publishersService.getPublisherById(this.id);\n        name = publisher.name;\n        if (publisher.contact) {\n          this.hasContact = true;\n          postalCode = publisher.contact.postalCode;\n          street = publisher.contact.street;\n          city = publisher.contact.city;\n          country = publisher.contact.country;\n          streetNumber = publisher.contact.streetNumber;\n          phoneNumber = publisher.contact.phoneNumber;\n          website = publisher.contact.website;\n          mailAddress = publisher.contact.mailAddress;\n        }\n        this.label = 'Modification de l\\'éditeur \\\"' + name + '\\\"';\n      } else {\n        this.label = 'Création d\\'un éditeur';\n      }\n      this.contactForm = new UntypedFormGroup({\n        'postalCode': new UntypedFormControl(postalCode, [Validators.maxLength(50)]),\n        'street': new UntypedFormControl(street, [Validators.maxLength(255)]),\n        'city': new UntypedFormControl(city, [Validators.maxLength(50)]),\n        'country': new UntypedFormControl(country, [Validators.required, Validators.maxLength(50)]),\n        'streetNumber': new UntypedFormControl(streetNumber, [Validators.maxLength(10)]),\n        'phoneNumber': new UntypedFormControl(phoneNumber, [Validators.maxLength(50)]),\n        'website': new UntypedFormControl(website, [Validators.maxLength(75)]),\n        'mailAddress': new UntypedFormControl(mailAddress, [Validators.maxLength(320)])\n      });\n      this.publisherForm = new UntypedFormGroup({\n        'name': new UntypedFormControl(name, [Validators.required, Validators.maxLength(255), this.nameAlreadyExists.bind(this)])\n      });\n      if (this.hasContact) {\n        this.publisherForm.addControl('contact', this.contactForm);\n      }\n    }\n    nameAlreadyExists(control) {\n      /* We need spit the case edit mode or not to allow save the current edited name */\n      if (!this.editMode && this.publishersService.getExistingNames().indexOf(control.value.toLowerCase().trim()) !== -1 || this.editMode && control.value.toLowerCase().trim() !== this.publishersService.getPublisherById(this.id).name.toLowerCase().trim() && this.publishersService.getExistingNames().indexOf(control.value.toLowerCase().trim()) !== -1) {\n        return {\n          'nameAlreadyExists': true\n        };\n      }\n      return null;\n    }\n  }\n  PublisherEditComponent.ɵfac = function PublisherEditComponent_Factory(t) {\n    return new (t || PublisherEditComponent)(i0.ɵɵdirectiveInject(i1.PublisherService), i0.ɵɵdirectiveInject(i2.PublisherDataService), i0.ɵɵdirectiveInject(i3.CountryDataService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  PublisherEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PublisherEditComponent,\n    selectors: [[\"app-publisher-edit\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"form-text\", 4, \"ngIf\"], [3, \"contactForm\", 4, \"ngIf\"], [1, \"col-xl-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-2\", \"mb-2\", 3, \"disabled\"], [1, \"x-spacer\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"mr-2\", \"mb-2\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-secondary mr-2 mb-2\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-outline-danger mr-2 mb-2\", 3, \"click\", 4, \"ngIf\"], [1, \"form-text\"], [3, \"contactForm\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mr-2\", \"mb-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", \"mr-2\", \"mb-2\", 3, \"click\"]],\n    template: function PublisherEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PublisherEditComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h5\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2);\n        i0.ɵɵelement(5, \"label\", 3)(6, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, PublisherEditComponent_span_7_Template, 3, 0, \"span\", 5);\n        i0.ɵɵtemplate(8, PublisherEditComponent_app_contact_form_8_Template, 1, 1, \"app-contact-form\", 6);\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"div\", 7)(11, \"button\", 8);\n        i0.ɵɵtext(12, \"Sauvegarder \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"span\", 9);\n        i0.ɵɵelementStart(14, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function PublisherEditComponent_Template_button_click_14_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(15, \"Annuler \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"span\", 9);\n        i0.ɵɵtemplate(17, PublisherEditComponent_button_17_Template, 2, 0, \"button\", 11);\n        i0.ɵɵtemplate(18, PublisherEditComponent_button_18_Template, 2, 0, \"button\", 12);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.publisherForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.publisherForm.pristine && ctx.publisherForm.hasError(\"nameAlreadyExists\", \"name\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasContact);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.publisherForm.valid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasContact);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasContact);\n      }\n    },\n    dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.ContactFormComponent]\n  });\n  return PublisherEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}