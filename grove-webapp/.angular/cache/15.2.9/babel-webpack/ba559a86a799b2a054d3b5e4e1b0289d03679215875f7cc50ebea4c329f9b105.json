{"ast":null,"code":"import { NAV } from './shared/services/wrapper.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared/services/wrapper.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./wrapper/nav-wrapper/nav-wrapper.component\";\nimport * as i4 from \"./wrapper/game-edit-wrapper/game-edit-wrapper.component\";\nfunction AppComponent_app_nav_wrapper_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-nav-wrapper\");\n  }\n}\nfunction AppComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-locked-mode-wrapper\");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(wrapperService) {\n      this.wrapperService = wrapperService;\n      this.title = 'grove-webapp';\n      this.wrapperService.mode = NAV;\n      this.wrapperService.entity = null;\n    }\n    isNavigation() {\n      return this.wrapperService.mode === NAV;\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WrapperService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"notNavBlock\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_app_nav_wrapper_0_Template, 1, 0, \"app-nav-wrapper\", 0);\n        i0.ɵɵtemplate(1, AppComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isNavigation())(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgIf, i3.NavWrapperComponent, i4.GameEditWrapperComponent]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}