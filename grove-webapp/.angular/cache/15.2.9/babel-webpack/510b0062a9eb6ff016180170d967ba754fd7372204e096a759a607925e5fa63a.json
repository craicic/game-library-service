{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CreatorService = /*#__PURE__*/(() => {\n  class CreatorService {\n    constructor(http) {\n      this.http = http;\n      this.pagedCreatorsChanged = new Subject();\n      this.apiUri = environment.apiUri;\n    }\n    setPagedCreators(pagedCreators) {\n      this.pagedCreators = pagedCreators;\n      this.pagedCreatorsChanged.next(this.pagedCreators);\n    }\n    getExistingNames() {\n      return this.existingNames;\n    }\n    getCreatorById(id) {\n      return this.getCreators().find(creator => creator.id === id);\n    }\n    getCreators() {\n      return this.pagedCreators.content.slice();\n    }\n    updateCreators(creator) {\n      this.pagedCreators.content = this.pagedCreators.content.filter(streamedCreator => creator.id !== streamedCreator.id);\n      this.pagedCreators.content.push(creator);\n      this.pagedCreatorsChanged.next(this.pagedCreators);\n    }\n    setNames(names) {\n      names.forEach(value => {\n        value.lastName = value.lastName.toLowerCase().trim();\n        value.firstName = value.firstName.toLowerCase().trim();\n      });\n      console.table(names);\n      this.existingNames = names.slice();\n    }\n    /* ============================================== REST API METHODS =================================================================== */\n    fetchAllNames() {\n      return this.http.get(this.apiUri + '/admin/creators/names', {\n        responseType: 'json'\n      });\n    }\n    findByFullName(fullName) {\n      return this.http.get(this.apiUri + '/admin/creators?full-name=' + fullName, {\n        responseType: 'json'\n      });\n    }\n  }\n  CreatorService.ɵfac = function CreatorService_Factory(t) {\n    return new (t || CreatorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CreatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CreatorService,\n    factory: CreatorService.ɵfac,\n    providedIn: 'root'\n  });\n  return CreatorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}