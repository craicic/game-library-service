{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../category.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CategoryEditComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9)(1, \"span\");\n    i0.ɵɵtext(2, \"Cette cat\\u00E9gorie existe d\\u00E9j\\u00E0 en base de donn\\u00E9es\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let CategoryEditComponent = /*#__PURE__*/(() => {\n  class CategoryEditComponent {\n    constructor(service, route, router) {\n      this.service = service;\n      this.route = route;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.subscription = this.route.params.subscribe(params => {\n        const id = 'id';\n        this.id = +params[id];\n        if (params[id]) {\n          this.editMode = true;\n        } else {\n          this.editMode = false;\n        }\n        this.initFrom();\n      });\n    }\n    onSubmit() {\n      const category = this.categoryForm.value;\n      if (this.editMode) {\n        this.service.edit(this.id, category);\n      } else {\n        this.service.add(category);\n      }\n      this.onCancel();\n    }\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n    initFrom() {\n      let categoryTitle = '';\n      if (this.editMode) {\n        const category = this.service.getCategoryById(this.id);\n        categoryTitle = category.title;\n        this.label = 'Édition de la catégorie \\\"' + categoryTitle + '\\\"';\n      } else {\n        this.label = 'Création d\\'une catégorie';\n      }\n      this.service.setLowerCasedAndTrimmedCategoryTitles();\n      this.categoryForm = new UntypedFormGroup({\n        'title': new UntypedFormControl(categoryTitle, [Validators.required, Validators.maxLength(50)])\n      }, !this.editMode ? {\n        validators: this.titlesExistValidator.bind(this)\n      } : {\n        validators: this.titlesExistEditModeValidator.bind(this)\n      });\n    }\n    titlesExistValidator(control) {\n      const currentTitle = control.get('title').value.toLowerCase().trim();\n      const titles = this.service.getLowerCasedAndTrimmedCategoryTitles();\n      if (titles.indexOf(currentTitle) !== -1) {\n        return {\n          titleAlreadyExists: true\n        };\n      }\n      return null;\n    }\n    titlesExistEditModeValidator(control) {\n      const currentTitle = control.get('title').value.toLowerCase().trim();\n      const titles = this.service.getLowerCasedAndTrimmedCategoryTitles();\n      if (titles.indexOf(currentTitle) !== -1 && currentTitle !== this.service.getCategoryById(this.id).title.toLowerCase().trim()) {\n        return {\n          titleAlreadyExists: true\n        };\n      }\n      return null;\n    }\n  }\n  CategoryEditComponent.ɵfac = function CategoryEditComponent_Factory(t) {\n    return new (t || CategoryEditComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  CategoryEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryEditComponent,\n    selectors: [[\"app-category-edit\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-xl-12\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlTitle\", \"title\", 1, \"form-control\"], [\"class\", \"form-text\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-2\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"form-text\"]],\n    template: function CategoryEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CategoryEditComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(7, CategoryEditComponent_span_7_Template, 3, 0, \"span\", 6);\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"div\", 2)(10, \"button\", 7);\n        i0.ɵɵtext(11, \"Sauvegarder \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CategoryEditComponent_Template_button_click_12_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(13, \"Annuler \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.categoryForm.pristine && ctx.categoryForm.hasError(\"titleAlreadyExists\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.categoryForm.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective]\n  });\n  return CategoryEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}