{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let PublisherService = /*#__PURE__*/(() => {\n  class PublisherService {\n    constructor() {\n      this.pagedPublishersChanged = new Subject();\n      this.existingNames = [];\n    }\n    setPagedPublishers(pagedPublishers) {\n      this.pagedPublishers = pagedPublishers;\n      this.pagedPublishersChanged.next(this.pagedPublishers);\n    }\n    getPublisherById(id) {\n      return this.getPublishers().find(publisher => publisher.id === id);\n    }\n    getPublishers() {\n      return this.pagedPublishers.content.slice();\n    }\n    updatePublishers(publisher) {\n      this.pagedPublishers.content = this.pagedPublishers.content.filter(streamedPublisher => publisher.id !== streamedPublisher.id);\n      this.pagedPublishers.content.push(publisher);\n      this.pagedPublishersChanged.next(this.pagedPublishers);\n    }\n    setNames(names) {\n      names.forEach(publisher => this.existingNames.push(publisher.name.toLowerCase().trim()));\n    }\n    getExistingNames() {\n      return this.existingNames;\n    }\n  }\n  PublisherService.ɵfac = function PublisherService_Factory(t) {\n    return new (t || PublisherService)();\n  };\n  PublisherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PublisherService,\n    factory: PublisherService.ɵfac,\n    providedIn: 'root'\n  });\n  return PublisherService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}