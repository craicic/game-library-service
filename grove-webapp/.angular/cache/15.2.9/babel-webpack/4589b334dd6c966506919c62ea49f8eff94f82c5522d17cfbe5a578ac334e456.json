{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/wrapper.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nexport let LockedHeaderComponent = /*#__PURE__*/(() => {\n  class LockedHeaderComponent {\n    constructor(wrapperService) {\n      this.wrapperService = wrapperService;\n    }\n    ngOnInit() {}\n    getEntity() {\n      return this.wrapperService.entity;\n    }\n    getMode() {\n      return this.wrapperService.MODE_NAMES[this.wrapperService.mode];\n    }\n  }\n  LockedHeaderComponent.ɵfac = function LockedHeaderComponent_Factory(t) {\n    return new (t || LockedHeaderComponent)(i0.ɵɵdirectiveInject(i1.WrapperService));\n  };\n  LockedHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LockedHeaderComponent,\n    selectors: [[\"app-locked-header\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"navbar\", \"navbar-expand-md\", \"navbar-success\", \"bg-success\"], [1, \"navbar-nav\", \"ml-auto\", \"mr-auto\"], [1, \"nav-item\"], [1, \"text-white\"]],\n    template: function LockedHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1)(2, \"li\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", ctx.getEntity(), \" - Mode \", ctx.getMode(), \"\");\n      }\n    },\n    dependencies: [i2.NgbNavbar]\n  });\n  return LockedHeaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}