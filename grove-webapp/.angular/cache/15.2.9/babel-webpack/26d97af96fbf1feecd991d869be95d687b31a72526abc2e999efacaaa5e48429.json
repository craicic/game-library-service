{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let AccountService = /*#__PURE__*/(() => {\n  class AccountService {\n    constructor(route, router, http) {\n      this.route = route;\n      this.router = router;\n      this.http = http;\n      this.apiUri = environment.apiUri;\n    }\n    saveAndStoreAccount(account) {\n      return this.saveAccount(account).pipe(tap(a => this.account = a));\n    }\n    saveAccount(account) {\n      let contactParam = '';\n      if (account.contact) {\n        contactParam = '?has-contact=true';\n      }\n      return this.http.post(this.apiUri + '/admin/accounts' + contactParam, account);\n    }\n    fetchAll() {\n      return this.http.get(this.apiUri + '/admin/accounts');\n    }\n    fetchById(id) {\n      return this.http.get(this.apiUri + '/admin/accounts/' + id);\n    }\n    fetchActives() {\n      return this.http.get(this.apiUri + '/admin/accounts/no-current-loan');\n    }\n  }\n  AccountService.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n  AccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}