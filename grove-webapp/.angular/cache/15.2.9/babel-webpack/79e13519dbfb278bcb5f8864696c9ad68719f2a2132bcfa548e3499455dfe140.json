{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../category.service\";\nimport * as i2 from \"../../configuration/configuration.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"../../shared/simple-filter-form/simple-filter-form.component\";\nconst _c0 = function (a1) {\n  return [\"/admin/editor/categories\", a1];\n};\nfunction CategoryListComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, category_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", category_r1.title, \" (id:\", category_r1.id, \")\");\n  }\n}\nexport let CategoryListComponent = /*#__PURE__*/(() => {\n  class CategoryListComponent {\n    constructor(service, configurationService, router) {\n      this.service = service;\n      this.configurationService = configurationService;\n      this.router = router;\n    }\n    ngOnInit() {\n      /* the resolver load all categories then ... */\n      this.initForm();\n      this.subscription = this.service.pageChanged.subscribe(page => {\n        this.categories = page.content.slice();\n        this.totalElements = page.content.length;\n        this.page = page.pageNumber;\n        this.pageSize = page.pageSize;\n      });\n      this.service.initPage();\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    onPageChange() {\n      // this.router.navigate(['/admin/categories']);\n    }\n    onFilter() {\n      this.service.filter(this.filterForm.get('keyword').value);\n    }\n    onRefreshFilter() {\n      this.service.removeFilter();\n      this.filterForm.reset();\n    }\n    onRefreshList() {\n      this.service.fetchAllAndStore();\n      this.service.updatePage();\n      this.router.navigate(['/admin/editor/categories']);\n    }\n    onDelete() {\n      this.filterForm.reset();\n    }\n    initForm() {\n      this.filterForm = new UntypedFormGroup({\n        'keyword': new UntypedFormControl('', [Validators.required, Validators.maxLength(50)])\n      });\n    }\n  }\n  CategoryListComponent.ɵfac = function CategoryListComponent_Factory(t) {\n    return new (t || CategoryListComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.ConfigurationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  CategoryListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryListComponent,\n    selectors: [[\"app-category-list\"]],\n    decls: 10,\n    vars: 9,\n    consts: [[3, \"filterForm\", \"clickFilter\", \"clickRefresh\", \"clickDelete\"], [\"style\", \"cursor: pointer;\", \"routerLinkActive\", \"active\", \"class\", \"list-group-item list-group-item-action\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"y-spacer\"], [3, \"collectionSize\", \"pageSize\", \"page\", \"pageChange\"], [\"type\", \"button\", \"routerLink\", \"/admin/editor/categories/new\", 1, \"btn\", \"btn-secondary\", \"mr-2\", \"mb-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mr-2\", \"mb-2\", 3, \"click\"], [\"routerLinkActive\", \"active\", 1, \"list-group-item\", \"list-group-item-action\", 2, \"cursor\", \"pointer\", 3, \"routerLink\"]],\n    template: function CategoryListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-simple-filter-form\", 0);\n        i0.ɵɵlistener(\"clickFilter\", function CategoryListComponent_Template_app_simple_filter_form_clickFilter_0_listener() {\n          return ctx.onFilter();\n        })(\"clickRefresh\", function CategoryListComponent_Template_app_simple_filter_form_clickRefresh_0_listener() {\n          return ctx.onRefreshFilter();\n        })(\"clickDelete\", function CategoryListComponent_Template_app_simple_filter_form_clickDelete_0_listener() {\n          return ctx.onDelete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(1, CategoryListComponent_a_1_Template, 2, 5, \"a\", 1);\n        i0.ɵɵpipe(2, \"slice\");\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"ngb-pagination\", 3);\n        i0.ɵɵlistener(\"pageChange\", function CategoryListComponent_Template_ngb_pagination_pageChange_4_listener($event) {\n          return ctx.page = $event;\n        })(\"pageChange\", function CategoryListComponent_Template_ngb_pagination_pageChange_4_listener() {\n          return ctx.onPageChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵtext(7, \"Nouvelle cat\\u00E9gorie\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CategoryListComponent_Template_button_click_8_listener() {\n          return ctx.onRefreshList();\n        });\n        i0.ɵɵtext(9, \"Rafraichir la liste\\n\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"filterForm\", ctx.filterForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 5, ctx.categories, (ctx.page - 1) * ctx.pageSize, ctx.page * ctx.pageSize));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"collectionSize\", ctx.totalElements)(\"pageSize\", ctx.pageSize)(\"page\", ctx.page);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.NgbPagination, i3.RouterLink, i3.RouterLinkActive, i6.SimpleFilterFormComponent, i4.SlicePipe],\n    styles: [\".y-spacer[_ngcontent-%COMP%]{margin-top:12px}\"]\n  });\n  return CategoryListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}